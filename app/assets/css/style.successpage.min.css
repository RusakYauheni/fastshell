/*!
 * fastshell
 * Fiercely quick and opinionated front-ends
 * https://HosseinKarami.github.io/fastshell
 * @author Hossein Karami
 * @version 1.0.5
 * Copyright 2019. MIT licensed.
 */
*{box-sizing:border-box;font-smoothing:antialiased;text-rendering:optimizeLegibility}html{width:100%;overflow-x:hidden;font-size:62.5%}@media (min-width:1400px){html{font-size:74%}}@media (min-width:1800px){html{font-size:85.5%}}body{width:100%;overflow-x:hidden;font:400 1em Montserrat,Helvetica Neue,Helvetica,Arial;color:#444;transition:all .4s ease-in .3s}body,html{height:100%}

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0;overflow:hidden;overflow-y:scroll}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}html{box-sizing:border-box}p{padding:0}.success-page{width:100%;height:auto;background-image:url(../img/SuccessPage/successpage.jpg);background-size:cover;background-repeat:no-repeat;background-position:50% 50%;padding-bottom:3.85%}@media (-webkit-min-device-pixel-ratio:1.3),(min--moz-device-pixel-ratio:1.3),(min-device-pixel-ratio:1.3),(min-resolution:1.3dppx){.success-page{background-image:url(../img/SuccessPage/successpage-2x.jpg)}}.success-page__logotype{display:inline-block;text-decoration:none;color:#fff;font-size:2.1em;font-weight:700;text-transform:uppercase;margin-top:5.3%;margin-left:11.5%}.success-page__main{padding-top:62px;padding-bottom:72px;width:53.125%;margin:0 auto;margin-top:72px;background-color:#fff;border:1px solid #979797;border-radius:6px}@media (max-width:599px){.success-page__main{width:95%;margin-top:40px}}@media (min-width:600px){.success-page__main{width:78%;margin-top:72px}}@media (min-width:900px){.success-page__main{width:53.125%}}.success-page__form{margin:0 auto;width:77%;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:center;align-items:center}@media (max-width:599px){.success-page__form{width:90%}}@media (min-width:600px){.success-page__form{width:75%}}.success-page__form p{color:#4a4a4a;font-size:1.4em;font-weight:400;text-align:center;margin-top:6%}.success-page__form h1{color:#4a4a4a;font-size:1.8em;font-weight:700;text-align:center;margin:0}p{margin:0}.jatana-auto{position:relative;width:100%;padding-top:34.65%;padding-bottom:2.25%;background-image:linear-gradient(1deg,#fff,#d7f1ff)}@media (max-width:599px){.jatana-auto{padding-top:40%}}@media (min-width:600px){.jatana-auto{padding-top:40%}}.jatana-auto h2{width:67%;color:#435079;font-size:4.2em;font-weight:700;line-height:1.1em;letter-spacing:1.06px;margin:0 auto 52px;text-align:center}@media (max-width:599px){.jatana-auto h2{width:90%;font-size:3em}}.jatana-auto__ability-container{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;width:73.6805%;margin:86px auto 99.5px}@media (max-width:599px){.jatana-auto__ability-container{-ms-flex-direction:column;flex-direction:column;margin-bottom:50px}}.jatana-auto__ability-container--margin{margin:0;margin-top:6%;width:100%}.jatana-auto__ability{max-width:560px;width:100%}.jatana-auto__ability h4{color:#14245a;font-size:1.7em;font-weight:700;margin-bottom:15.5px;margin-top:0;text-align:center}.jatana-auto__ability p{color:#455792;font-size:1.2em;font-weight:400;line-height:2.3em;letter-spacing:.65px;text-align:center}.jatana-auto__ability:not(:last-child){margin-right:6%}.jatana-auto__ability--margin:not(:last-child){margin-right:10%}@media (max-width:599px){.jatana-auto__ability--margin:not(:last-child){margin-right:5%}}@media (min-width:600px){.jatana-auto__ability--margin:not(:last-child){margin-right:10%}}.jatana-auto__ability--margin h4{font-size:1.6em}.jatana-auto .path-left{position:absolute;bottom:0;width:10.0694%}@media (max-width:599px){.jatana-auto .path-left{display:none}}@media (min-width:600px){.jatana-auto .path-left{display:block}}.jatana-auto .path-right{position:absolute;bottom:-32%;right:0;width:24.65%}@media (max-width:599px){.jatana-auto .path-right{display:none}}@media (min-width:600px){.jatana-auto .path-right{display:block}}.button{width:8.9766%;border:1px solid #fff;border-radius:60px;line-height:2.3em;text-align:center}@media (min-width:600px){.button{width:15%}}@media (min-width:900px){.button{width:10%}}.button:hover{cursor:pointer}.button--orange{display:block;width:18.0553%;margin:0 auto;background-image:linear-gradient(90deg,#ff6268 0,#ffa34e);font-size:1.6em;font-weight:700;text-transform:uppercase;letter-spacing:1.06px;line-height:3em;border:none}@media (max-width:599px){.button--orange{width:60%}}@media (min-width:600px){.button--orange{width:40%}}@media (min-width:900px){.button--orange{width:25%}}@media (min-width:1200px){.button--orange{width:20%}}@media (max-width:599px){.button--small-mobile{line-height:2.5em;font-size:1.25em}}.button--constant{color:#fff;text-decoration:none;box-sizing:border-box;margin-bottom:19px}@media (max-width:599px){.button--constant{width:134px;font-size:14px;font-weight:700;line-height:32px;text-transform:uppercase;letter-spacing:.44px}}@media (min-width:600px){.button--constant{width:134px;font-size:14px;font-weight:700;line-height:32px;text-transform:uppercase;letter-spacing:.44px}}@media (min-width:900px){.button--constant{width:134px;font-size:14px;font-weight:700;line-height:32px;text-transform:uppercase;letter-spacing:.44px}}@media (min-width:1200px){.button--constant{width:134px;font-size:14px;font-weight:700;line-height:32px;text-transform:uppercase;letter-spacing:.44px}}.button--signup{width:60%;color:#fff;font-size:1.55em;text-transform:uppercase;letter-spacing:.53px;margin-top:20px;outline:none}@media (max-width:599px){.button--signup{font-size:1.4em}}@media (min-width:600px){.button--signup{font-size:1.4em}}@media (min-width:1200px){.button--signup{font-size:1.55em}}.button--continue{line-height:2.6em}@media (max-width:599px){.button--continue{box-shadow:0 7px 30px #9b9a9b}}@media (min-width:600px){.button--continue{font-size:1.6em}}@media (min-width:1200px){.button--continue{font-size:1.4em}}@media (min-width:1800px){.button--continue{line-height:2.2em}}.button--booknow{margin-top:6%}.button--contact{width:178px}.button--apply{width:85px;height:26px;font-family:Helvetica;font-size:14px;line-height:26px;text-transform:uppercase;letter-spacing:.44px}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
